name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .

    - name: Install Pandoc
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc

    - name: Test with pytest and check coverage
      run: |
        pytest --cov=src --cov-report=xml --cov-report=term

    - name: Verify minimum coverage
      run: |
        COVERAGE=$(python -c "import xml.etree.ElementTree as ET; print(ET.parse('coverage.xml').getroot().attrib['line-rate'])")
        COVERAGE_PCT=$(python -c "print(round(float('$COVERAGE') * 100, 2))")
        echo "Coverage: $COVERAGE_PCT%"
        if (( $(echo "$COVERAGE_PCT < 80" | bc -l) )); then
          echo "Coverage is less than 80%"
          exit 1
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}